{"ast":null,"code":"import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\nexport function multicast(subjectOrSubjectFactory, selector) {\n  var subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () {\n    return subjectOrSubjectFactory;\n  };\n  if (isFunction(selector)) {\n    return connect(selector, {\n      connector: subjectFactory\n    });\n  }\n  return function (source) {\n    return new ConnectableObservable(source, subjectFactory);\n  };\n}\n//# sourceMappingURL=multicast.js.map","map":{"version":3,"names":["ConnectableObservable","isFunction","connect","multicast","subjectOrSubjectFactory","selector","subjectFactory","connector","source"],"sources":["/Users/katerina/Projects/nrwl/test_nx_workspaces/imported-libs/node_modules/rxjs/dist/esm5/internal/operators/multicast.js"],"sourcesContent":["import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    var subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () { return subjectOrSubjectFactory; };\n    if (isFunction(selector)) {\n        return connect(selector, {\n            connector: subjectFactory,\n        });\n    }\n    return function (source) { return new ConnectableObservable(source, subjectFactory); };\n}\n//# sourceMappingURL=multicast.js.map"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,qCAAqC;AAC3E,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,SAASC,SAAS,CAACC,uBAAuB,EAAEC,QAAQ,EAAE;EACzD,IAAIC,cAAc,GAAGL,UAAU,CAACG,uBAAuB,CAAC,GAAGA,uBAAuB,GAAG,YAAY;IAAE,OAAOA,uBAAuB;EAAE,CAAC;EACpI,IAAIH,UAAU,CAACI,QAAQ,CAAC,EAAE;IACtB,OAAOH,OAAO,CAACG,QAAQ,EAAE;MACrBE,SAAS,EAAED;IACf,CAAC,CAAC;EACN;EACA,OAAO,UAAUE,MAAM,EAAE;IAAE,OAAO,IAAIR,qBAAqB,CAACQ,MAAM,EAAEF,cAAc,CAAC;EAAE,CAAC;AAC1F;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}