{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = options.connector,\n    connector = _a === void 0 ? function () {\n      return new Subject();\n    } : _a,\n    _b = options.resetOnError,\n    resetOnError = _b === void 0 ? true : _b,\n    _c = options.resetOnComplete,\n    resetOnComplete = _c === void 0 ? true : _c,\n    _d = options.resetOnRefCountZero,\n    resetOnRefCountZero = _d === void 0 ? true : _d;\n  return function (wrapperSource) {\n    var connection;\n    var resetConnection;\n    var subject;\n    var refCount = 0;\n    var hasCompleted = false;\n    var hasErrored = false;\n    var cancelReset = function () {\n      resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n      resetConnection = undefined;\n    };\n    var reset = function () {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    var resetAndUnsubscribe = function () {\n      var conn = connection;\n      reset();\n      conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n    };\n    return operate(function (source, subscriber) {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n      var dest = subject = subject !== null && subject !== void 0 ? subject : connector();\n      subscriber.add(function () {\n        refCount--;\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n      dest.subscribe(subscriber);\n      if (!connection && refCount > 0) {\n        connection = new SafeSubscriber({\n          next: function (value) {\n            return dest.next(value);\n          },\n          error: function (err) {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: function () {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          }\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\nfunction handleReset(reset, on) {\n  var args = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n  if (on === true) {\n    reset();\n    return;\n  }\n  if (on === false) {\n    return;\n  }\n  var onSubscriber = new SafeSubscriber({\n    next: function () {\n      onSubscriber.unsubscribe();\n      reset();\n    }\n  });\n  return on.apply(void 0, __spreadArray([], __read(args))).subscribe(onSubscriber);\n}\n//# sourceMappingURL=share.js.map","map":{"version":3,"names":["__read","__spreadArray","innerFrom","Subject","SafeSubscriber","operate","share","options","_a","connector","_b","resetOnError","_c","resetOnComplete","_d","resetOnRefCountZero","wrapperSource","connection","resetConnection","subject","refCount","hasCompleted","hasErrored","cancelReset","unsubscribe","undefined","reset","resetAndUnsubscribe","conn","source","subscriber","dest","add","handleReset","subscribe","next","value","error","err","complete","on","args","_i","arguments","length","onSubscriber","apply"],"sources":["/Users/katerina/Projects/nrwl/test_nx_workspaces/imported-libs/node_modules/rxjs/dist/esm5/internal/operators/share.js"],"sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.connector, connector = _a === void 0 ? function () { return new Subject(); } : _a, _b = options.resetOnError, resetOnError = _b === void 0 ? true : _b, _c = options.resetOnComplete, resetOnComplete = _c === void 0 ? true : _c, _d = options.resetOnRefCountZero, resetOnRefCountZero = _d === void 0 ? true : _d;\n    return function (wrapperSource) {\n        var connection;\n        var resetConnection;\n        var subject;\n        var refCount = 0;\n        var hasCompleted = false;\n        var hasErrored = false;\n        var cancelReset = function () {\n            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n            resetConnection = undefined;\n        };\n        var reset = function () {\n            cancelReset();\n            connection = subject = undefined;\n            hasCompleted = hasErrored = false;\n        };\n        var resetAndUnsubscribe = function () {\n            var conn = connection;\n            reset();\n            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n        };\n        return operate(function (source, subscriber) {\n            refCount++;\n            if (!hasErrored && !hasCompleted) {\n                cancelReset();\n            }\n            var dest = (subject = subject !== null && subject !== void 0 ? subject : connector());\n            subscriber.add(function () {\n                refCount--;\n                if (refCount === 0 && !hasErrored && !hasCompleted) {\n                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n                }\n            });\n            dest.subscribe(subscriber);\n            if (!connection &&\n                refCount > 0) {\n                connection = new SafeSubscriber({\n                    next: function (value) { return dest.next(value); },\n                    error: function (err) {\n                        hasErrored = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnError, err);\n                        dest.error(err);\n                    },\n                    complete: function () {\n                        hasCompleted = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnComplete);\n                        dest.complete();\n                    },\n                });\n                innerFrom(source).subscribe(connection);\n            }\n        })(wrapperSource);\n    };\n}\nfunction handleReset(reset, on) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (on === true) {\n        reset();\n        return;\n    }\n    if (on === false) {\n        return;\n    }\n    var onSubscriber = new SafeSubscriber({\n        next: function () {\n            onSubscriber.unsubscribe();\n            reset();\n        },\n    });\n    return on.apply(void 0, __spreadArray([], __read(args))).subscribe(onSubscriber);\n}\n//# sourceMappingURL=share.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}