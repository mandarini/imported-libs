{"ast":null,"code":"\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  includeConditionalArg: () => includeConditionalArg,\n  isExportStory: () => isExportStory,\n  parseKind: () => parseKind,\n  sanitize: () => sanitize,\n  storyNameFromExport: () => storyNameFromExport,\n  toId: () => toId\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_startCase = __toESM(require(\"lodash/startCase\"));\n\n// src/includeConditionalArg.ts\nvar import_isEqual = __toESM(require(\"lodash/isEqual\"));\nvar count = vals => vals.map(v => typeof v !== \"undefined\").filter(Boolean).length;\nvar testValue = (cond, value) => {\n  const {\n    exists,\n    eq,\n    neq,\n    truthy\n  } = cond;\n  if (count([exists, eq, neq, truthy]) > 1) {\n    throw new Error(`Invalid conditional test ${JSON.stringify({\n      exists,\n      eq,\n      neq\n    })}`);\n  }\n  if (typeof eq !== \"undefined\") {\n    return (0, import_isEqual.default)(value, eq);\n  }\n  if (typeof neq !== \"undefined\") {\n    return !(0, import_isEqual.default)(value, neq);\n  }\n  if (typeof exists !== \"undefined\") {\n    const valueExists = typeof value !== \"undefined\";\n    return exists ? valueExists : !valueExists;\n  }\n  const shouldBeTruthy = typeof truthy === \"undefined\" ? true : truthy;\n  return shouldBeTruthy ? !!value : !value;\n};\nvar includeConditionalArg = (argType, args, globals) => {\n  if (!argType.if) return true;\n  const {\n    arg,\n    global\n  } = argType.if;\n  if (count([arg, global]) !== 1) {\n    throw new Error(`Invalid conditional value ${JSON.stringify({\n      arg,\n      global\n    })}`);\n  }\n  const value = arg ? args[arg] : globals[global];\n  return testValue(argType.if, value);\n};\n\n// src/index.ts\nvar sanitize = string => {\n  return string.toLowerCase().replace(/[ ’–—―′¿'`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, \"-\").replace(/-+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n};\nvar sanitizeSafe = (string, part) => {\n  const sanitized = sanitize(string);\n  if (sanitized === \"\") {\n    throw new Error(`Invalid ${part} '${string}', must include alphanumeric characters`);\n  }\n  return sanitized;\n};\nvar toId = (kind, name) => `${sanitizeSafe(kind, \"kind\")}${name ? `--${sanitizeSafe(name, \"name\")}` : \"\"}`;\nvar storyNameFromExport = key => (0, import_startCase.default)(key);\nfunction matches(storyKey, arrayOrRegex) {\n  if (Array.isArray(arrayOrRegex)) {\n    return arrayOrRegex.includes(storyKey);\n  }\n  return storyKey.match(arrayOrRegex);\n}\nfunction isExportStory(key, {\n  includeStories,\n  excludeStories\n}) {\n  return key !== \"__esModule\" && (!includeStories || matches(key, includeStories)) && (!excludeStories || !matches(key, excludeStories));\n}\nvar parseKind = (kind, {\n  rootSeparator,\n  groupSeparator\n}) => {\n  const [root, remainder] = kind.split(rootSeparator, 2);\n  const groups = (remainder || kind).split(groupSeparator).filter(i => !!i);\n  return {\n    root: remainder ? root : null,\n    groups\n  };\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  includeConditionalArg,\n  isExportStory,\n  parseKind,\n  sanitize,\n  storyNameFromExport,\n  toId\n});","map":{"version":3,"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toESM","mod","isNodeMode","__esModule","value","__toCommonJS","src_exports","includeConditionalArg","isExportStory","parseKind","sanitize","storyNameFromExport","toId","module","exports","import_startCase","require","import_isEqual","count","vals","map","v","filter","Boolean","length","testValue","cond","exists","eq","neq","truthy","Error","JSON","stringify","default","valueExists","shouldBeTruthy","argType","args","globals","if","arg","global","string","toLowerCase","replace","sanitizeSafe","part","sanitized","kind","matches","storyKey","arrayOrRegex","Array","isArray","includes","match","includeStories","excludeStories","rootSeparator","groupSeparator","root","remainder","split","groups","i"],"sources":["/Users/katerina/Projects/nrwl/test_nx_workspaces/imported-libs/node_modules/@storybook/csf/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  includeConditionalArg: () => includeConditionalArg,\n  isExportStory: () => isExportStory,\n  parseKind: () => parseKind,\n  sanitize: () => sanitize,\n  storyNameFromExport: () => storyNameFromExport,\n  toId: () => toId\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_startCase = __toESM(require(\"lodash/startCase\"));\n\n// src/includeConditionalArg.ts\nvar import_isEqual = __toESM(require(\"lodash/isEqual\"));\nvar count = (vals) => vals.map((v) => typeof v !== \"undefined\").filter(Boolean).length;\nvar testValue = (cond, value) => {\n  const { exists, eq, neq, truthy } = cond;\n  if (count([exists, eq, neq, truthy]) > 1) {\n    throw new Error(`Invalid conditional test ${JSON.stringify({ exists, eq, neq })}`);\n  }\n  if (typeof eq !== \"undefined\") {\n    return (0, import_isEqual.default)(value, eq);\n  }\n  if (typeof neq !== \"undefined\") {\n    return !(0, import_isEqual.default)(value, neq);\n  }\n  if (typeof exists !== \"undefined\") {\n    const valueExists = typeof value !== \"undefined\";\n    return exists ? valueExists : !valueExists;\n  }\n  const shouldBeTruthy = typeof truthy === \"undefined\" ? true : truthy;\n  return shouldBeTruthy ? !!value : !value;\n};\nvar includeConditionalArg = (argType, args, globals) => {\n  if (!argType.if)\n    return true;\n  const { arg, global } = argType.if;\n  if (count([arg, global]) !== 1) {\n    throw new Error(`Invalid conditional value ${JSON.stringify({ arg, global })}`);\n  }\n  const value = arg ? args[arg] : globals[global];\n  return testValue(argType.if, value);\n};\n\n// src/index.ts\nvar sanitize = (string) => {\n  return string.toLowerCase().replace(/[ ’–—―′¿'`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, \"-\").replace(/-+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n};\nvar sanitizeSafe = (string, part) => {\n  const sanitized = sanitize(string);\n  if (sanitized === \"\") {\n    throw new Error(`Invalid ${part} '${string}', must include alphanumeric characters`);\n  }\n  return sanitized;\n};\nvar toId = (kind, name) => `${sanitizeSafe(kind, \"kind\")}${name ? `--${sanitizeSafe(name, \"name\")}` : \"\"}`;\nvar storyNameFromExport = (key) => (0, import_startCase.default)(key);\nfunction matches(storyKey, arrayOrRegex) {\n  if (Array.isArray(arrayOrRegex)) {\n    return arrayOrRegex.includes(storyKey);\n  }\n  return storyKey.match(arrayOrRegex);\n}\nfunction isExportStory(key, { includeStories, excludeStories }) {\n  return key !== \"__esModule\" && (!includeStories || matches(key, includeStories)) && (!excludeStories || !matches(key, excludeStories));\n}\nvar parseKind = (kind, { rootSeparator, groupSeparator }) => {\n  const [root, remainder] = kind.split(rootSeparator, 2);\n  const groups = (remainder || kind).split(groupSeparator).filter((i) => !!i);\n  return {\n    root: remainder ? root : null,\n    groups\n  };\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  includeConditionalArg,\n  isExportStory,\n  parseKind,\n  sanitize,\n  storyNameFromExport,\n  toId\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}