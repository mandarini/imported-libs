{"ast":null,"code":"import { isFunction } from './isFunction';\nexport function hasLift(source) {\n  return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n  return function (source) {\n    if (hasLift(source)) {\n      return source.lift(function (liftedSource) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n//# sourceMappingURL=lift.js.map","map":{"version":3,"names":["isFunction","hasLift","source","lift","operate","init","liftedSource","err","error","TypeError"],"sources":["/Users/katerina/Projects/nrwl/test_nx_workspaces/imported-libs/node_modules/rxjs/dist/esm5/internal/util/lift.js"],"sourcesContent":["import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,OAAO,SAASC,OAAO,CAACC,MAAM,EAAE;EAC5B,OAAOF,UAAU,CAACE,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACC,IAAI,CAAC;AAClF;AACA,OAAO,SAASC,OAAO,CAACC,IAAI,EAAE;EAC1B,OAAO,UAAUH,MAAM,EAAE;IACrB,IAAID,OAAO,CAACC,MAAM,CAAC,EAAE;MACjB,OAAOA,MAAM,CAACC,IAAI,CAAC,UAAUG,YAAY,EAAE;QACvC,IAAI;UACA,OAAOD,IAAI,CAACC,YAAY,EAAE,IAAI,CAAC;QACnC,CAAC,CACD,OAAOC,GAAG,EAAE;UACR,IAAI,CAACC,KAAK,CAACD,GAAG,CAAC;QACnB;MACJ,CAAC,CAAC;IACN;IACA,MAAM,IAAIE,SAAS,CAAC,wCAAwC,CAAC;EACjE,CAAC;AACL;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}