{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.repeatWhen = void 0;\nvar Subject_1 = require(\"../Subject\");\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nfunction repeatWhen(notifier) {\n  return lift_1.operate(function (source, subscriber) {\n    var innerSub;\n    var syncResub = false;\n    var completions$;\n    var isNotifierComplete = false;\n    var isMainComplete = false;\n    var checkComplete = function () {\n      return isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    };\n    var getCompletionSubject = function () {\n      if (!completions$) {\n        completions$ = new Subject_1.Subject();\n        notifier(completions$).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {\n          if (innerSub) {\n            subscribeForRepeatWhen();\n          } else {\n            syncResub = true;\n          }\n        }, function () {\n          isNotifierComplete = true;\n          checkComplete();\n        }));\n      }\n      return completions$;\n    };\n    var subscribeForRepeatWhen = function () {\n      isMainComplete = false;\n      innerSub = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, undefined, function () {\n        isMainComplete = true;\n        !checkComplete() && getCompletionSubject().next();\n      }));\n      if (syncResub) {\n        innerSub.unsubscribe();\n        innerSub = null;\n        syncResub = false;\n        subscribeForRepeatWhen();\n      }\n    };\n    subscribeForRepeatWhen();\n  });\n}\nexports.repeatWhen = repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map","map":{"version":3,"names":["Object","defineProperty","exports","value","repeatWhen","Subject_1","require","lift_1","OperatorSubscriber_1","notifier","operate","source","subscriber","innerSub","syncResub","completions$","isNotifierComplete","isMainComplete","checkComplete","complete","getCompletionSubject","Subject","subscribe","createOperatorSubscriber","subscribeForRepeatWhen","undefined","next","unsubscribe"],"sources":["/Users/katerina/Projects/nrwl/test_nx_workspaces/imported-libs/node_modules/rxjs/dist/cjs/internal/operators/repeatWhen.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.repeatWhen = void 0;\nvar Subject_1 = require(\"../Subject\");\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nfunction repeatWhen(notifier) {\n    return lift_1.operate(function (source, subscriber) {\n        var innerSub;\n        var syncResub = false;\n        var completions$;\n        var isNotifierComplete = false;\n        var isMainComplete = false;\n        var checkComplete = function () { return isMainComplete && isNotifierComplete && (subscriber.complete(), true); };\n        var getCompletionSubject = function () {\n            if (!completions$) {\n                completions$ = new Subject_1.Subject();\n                notifier(completions$).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function () {\n                    if (innerSub) {\n                        subscribeForRepeatWhen();\n                    }\n                    else {\n                        syncResub = true;\n                    }\n                }, function () {\n                    isNotifierComplete = true;\n                    checkComplete();\n                }));\n            }\n            return completions$;\n        };\n        var subscribeForRepeatWhen = function () {\n            isMainComplete = false;\n            innerSub = source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, undefined, function () {\n                isMainComplete = true;\n                !checkComplete() && getCompletionSubject().next();\n            }));\n            if (syncResub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                syncResub = false;\n                subscribeForRepeatWhen();\n            }\n        };\n        subscribeForRepeatWhen();\n    });\n}\nexports.repeatWhen = repeatWhen;\n//# sourceMappingURL=repeatWhen.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAIC,SAAS,GAAGC,OAAO,CAAC,YAAY,CAAC;AACrC,IAAIC,MAAM,GAAGD,OAAO,CAAC,cAAc,CAAC;AACpC,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAC1D,SAASF,UAAU,CAACK,QAAQ,EAAE;EAC1B,OAAOF,MAAM,CAACG,OAAO,CAAC,UAAUC,MAAM,EAAEC,UAAU,EAAE;IAChD,IAAIC,QAAQ;IACZ,IAAIC,SAAS,GAAG,KAAK;IACrB,IAAIC,YAAY;IAChB,IAAIC,kBAAkB,GAAG,KAAK;IAC9B,IAAIC,cAAc,GAAG,KAAK;IAC1B,IAAIC,aAAa,GAAG,YAAY;MAAE,OAAOD,cAAc,IAAID,kBAAkB,KAAKJ,UAAU,CAACO,QAAQ,EAAE,EAAE,IAAI,CAAC;IAAE,CAAC;IACjH,IAAIC,oBAAoB,GAAG,YAAY;MACnC,IAAI,CAACL,YAAY,EAAE;QACfA,YAAY,GAAG,IAAIV,SAAS,CAACgB,OAAO,EAAE;QACtCZ,QAAQ,CAACM,YAAY,CAAC,CAACO,SAAS,CAACd,oBAAoB,CAACe,wBAAwB,CAACX,UAAU,EAAE,YAAY;UACnG,IAAIC,QAAQ,EAAE;YACVW,sBAAsB,EAAE;UAC5B,CAAC,MACI;YACDV,SAAS,GAAG,IAAI;UACpB;QACJ,CAAC,EAAE,YAAY;UACXE,kBAAkB,GAAG,IAAI;UACzBE,aAAa,EAAE;QACnB,CAAC,CAAC,CAAC;MACP;MACA,OAAOH,YAAY;IACvB,CAAC;IACD,IAAIS,sBAAsB,GAAG,YAAY;MACrCP,cAAc,GAAG,KAAK;MACtBJ,QAAQ,GAAGF,MAAM,CAACW,SAAS,CAACd,oBAAoB,CAACe,wBAAwB,CAACX,UAAU,EAAEa,SAAS,EAAE,YAAY;QACzGR,cAAc,GAAG,IAAI;QACrB,CAACC,aAAa,EAAE,IAAIE,oBAAoB,EAAE,CAACM,IAAI,EAAE;MACrD,CAAC,CAAC,CAAC;MACH,IAAIZ,SAAS,EAAE;QACXD,QAAQ,CAACc,WAAW,EAAE;QACtBd,QAAQ,GAAG,IAAI;QACfC,SAAS,GAAG,KAAK;QACjBU,sBAAsB,EAAE;MAC5B;IACJ,CAAC;IACDA,sBAAsB,EAAE;EAC5B,CAAC,CAAC;AACN;AACAtB,OAAO,CAACE,UAAU,GAAGA,UAAU;AAC/B"},"metadata":{},"sourceType":"script","externalDependencies":[]}