{"ast":null,"code":"import { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Infinity;\n  }\n  if (isFunction(resultSelector)) {\n    return mergeMap(function () {\n      return innerObservable;\n    }, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(function () {\n    return innerObservable;\n  }, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map","map":{"version":3,"names":["mergeMap","isFunction","mergeMapTo","innerObservable","resultSelector","concurrent","Infinity"],"sources":["/Users/katerina/Projects/nrwl/test_nx_workspaces/imported-libs/node_modules/rxjs/dist/esm5/internal/operators/mergeMapTo.js"],"sourcesContent":["import { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    if (isFunction(resultSelector)) {\n        return mergeMap(function () { return innerObservable; }, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(function () { return innerObservable; }, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAO,SAASC,UAAU,CAACC,eAAe,EAAEC,cAAc,EAAEC,UAAU,EAAE;EACpE,IAAIA,UAAU,KAAK,KAAK,CAAC,EAAE;IAAEA,UAAU,GAAGC,QAAQ;EAAE;EACpD,IAAIL,UAAU,CAACG,cAAc,CAAC,EAAE;IAC5B,OAAOJ,QAAQ,CAAC,YAAY;MAAE,OAAOG,eAAe;IAAE,CAAC,EAAEC,cAAc,EAAEC,UAAU,CAAC;EACxF;EACA,IAAI,OAAOD,cAAc,KAAK,QAAQ,EAAE;IACpCC,UAAU,GAAGD,cAAc;EAC/B;EACA,OAAOJ,QAAQ,CAAC,YAAY;IAAE,OAAOG,eAAe;EAAE,CAAC,EAAEE,UAAU,CAAC;AACxE;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}